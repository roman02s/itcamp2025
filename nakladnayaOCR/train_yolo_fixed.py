#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ YOLO –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏–ø–∞–Ω–∏—è –±–æ–∫—Å–æ–≤
"""

import os
import sys
from pathlib import Path
import torch
from ultralytics import YOLO

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""

    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ YOLO –º–æ–¥–µ–ª–∏")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    device = 'cuda' if torch.cuda.is_available() else 'cpu'
    print(f"üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device}")

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    output_dir = Path("yolo_training/models/invoice_field_detection_fixed_v2")
    output_dir.mkdir(parents=True, exist_ok=True)

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏–ø–∞–Ω–∏—è –±–æ–∫—Å–æ–≤
    train_args = {
        'data': 'yolo_training/dataset/dataset.yaml',
        'epochs': 200,              # –£–º–µ—Ä–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö
        'batch': 8,                 # –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞
        'imgsz': 640,               # –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        'device': device,
        'project': str(output_dir.parent),
        'name': 'invoice_field_detection_fixed_v2',
        'save_period': 20,          # –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∫–∞–∂–¥—ã–µ 20 —ç–ø–æ—Ö
        'patience': 50,             # –†–∞–Ω–Ω–µ–µ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ
        'save': True,
        'cache': True,
        'workers': 2,
        'verbose': True,
        'exist_ok': True,
        'pretrained': True,

        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏–ø–∞–Ω–∏—è
        'lr0': 0.005,               # –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è
        'lrf': 0.005,               # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è
        'momentum': 0.937,
        'weight_decay': 0.0005,
        'warmup_epochs': 10,        # –î–æ–ª—å—à–µ warmup
        'warmup_momentum': 0.8,
        'warmup_bias_lr': 0.05,

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Ç–µ—Ä—å –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏–ø–∞–Ω–∏—è
        'box': 5.0,                 # –í–µ—Å box loss
        'cls': 0.5,                 # –í–µ—Å classification loss
        'dfl': 1.5,                 # Distribution Focal Loss

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è NMS –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏–ø–∞–Ω–∏—è
        'iou': 0.7,                 # IoU threshold –¥–ª—è NMS
        'conf': 0.25,               # Confidence threshold

        # –û—Ç–∫–ª—é—á–∞–µ–º –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å —Å–ª–∏–ø–∞–Ω–∏–µ
        'hsv_h': 0.1,               # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏—è —Ü–≤–µ—Ç–∞
        'hsv_s': 0.1,
        'hsv_v': 0.1,
        'degrees': 5.0,             # –ú–∞–ª–µ–Ω—å–∫–∏–π –ø–æ–≤–æ—Ä–æ—Ç
        'translate': 0.1,           # –ú–∞–ª–µ–Ω—å–∫–∏–π —Å–¥–≤–∏–≥
        'scale': 0.1,               # –ú–∞–ª–µ–Ω—å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        'shear': 2.0,               # –ú–∞–ª–µ–Ω—å–∫–æ–µ –∏—Å–∫–∞–∂–µ–Ω–∏–µ
        'perspective': 0.001,
        'flipud': 0.0,              # –û—Ç–∫–ª—é—á–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ
        'fliplr': 0.0,              # –û—Ç–∫–ª—é—á–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ
        'mosaic': 0.0,              # –û—Ç–∫–ª—é—á–∞–µ–º –º–æ–∑–∞–∏–∫—É
        'mixup': 0.0,               # –û—Ç–∫–ª—é—á–∞–µ–º mixup
        'copy_paste': 0.0,

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        'overlap_mask': False,      # –û—Ç–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –º–∞—Å–æ–∫
        'mask_ratio': 1,
        'dropout': 0.1,             # Dropout –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è
        'amp': True,                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ—à–∞–Ω–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
    }

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º YOLO –º–æ–¥–µ–ª—å...")
        model = YOLO('yolov8n.pt')

        print("üèÉ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ...")
        print("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è:")
        for key, value in train_args.items():
            print(f"  {key}: {value}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
        results = model.train(**train_args)

        print("\\n‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_dir}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª—É—á—à—É—é –º–æ–¥–µ–ª—å
        best_model_path = output_dir / 'weights' / 'best.pt'
        if best_model_path.exists():
            print(f"üèÜ –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {best_model_path}")

            # –ö–æ–ø–∏—Ä—É–µ–º –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ
            final_model_path = Path("src/best_yolo_model_fixed.pt")
            import shutil
            shutil.copy2(best_model_path, final_model_path)
            print(f"üìã –§–∏–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: {final_model_path}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    print("\\n" + "=" * 50)
    if success:
        print("üéØ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("2. –ï—Å–ª–∏ –±–æ–∫—Å—ã –≤—Å–µ –µ—â–µ —Å–ª–∏–ø–∞—é—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å IoU threshold")
        print("3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –±–ª–∏–∑–∫–∏—Ö –ø–æ–ª–µ–π")
    else:
        print("‚ùå –í–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏")
